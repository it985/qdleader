import{_ as e,c as t,o,a as i}from"./app-90N25QkG.js";const c={},a=i('<h1 id="vite工作原理" tabindex="-1"><a class="header-anchor" href="#vite工作原理"><span>Vite工作原理</span></a></h1><p>Vite是一种现代化的前端开发工具，其工作原理主要分为以下几个步骤：</p><blockquote><p>基于ESM构建： Vite作为一款基于ESM的前端构建工具，通过ES模块提供的动态导入功能来实现快速的开发和构建。</p></blockquote><blockquote><p>零配置开发： Vite允许开发者在不需要任何配置的情况下启动一个服务器进行开发，通过对文件的即时编译和缓存，来提高开发效率。</p></blockquote><blockquote><p>基于浏览器原生的ESM加载： Vite将所有文件视为ES模块，并且在开发时会直接从源代码加载模块，而不是打包后的文件，从而可以避免打包的过程带来的性能损失。</p></blockquote><blockquote><p>按需编译和缓存： Vite会按需编译和缓存依赖项，只有当需要更新时才会进行重新编译，缓存让开发者可以忽略无关的代码变化。</p></blockquote><blockquote><p>插件化架构： Vite的插件化架构可以方便地扩展其功能，例如使用插件来处理CSS、处理图片、压缩源代码等等。</p></blockquote>',7),l=[a];function s(r,n){return o(),t("div",null,l)}const _=e(c,[["render",s],["__file","简述vite的工作原理.html.vue"]]),u=JSON.parse('{"path":"/vite/%E7%AE%80%E8%BF%B0vite%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.html","title":"Vite工作原理","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1724247277000,"contributors":[{"name":"前端架构师","email":"62106726+qdleader@users.noreply.github.com","commits":1}]},"filePathRelative":"vite/简述vite的工作原理.md"}');export{_ as comp,u as data};
