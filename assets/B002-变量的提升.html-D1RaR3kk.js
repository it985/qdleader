import{_ as s,c as n,o as a,a as e}from"./app-90N25QkG.js";const t={},c=e(`<h1 id="b002-变量的提升" tabindex="-1"><a class="header-anchor" href="#b002-变量的提升"><span>B002-变量的提升</span></a></h1><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">myVar<span class="token punctuation">;</span>  <span class="token comment">// =&gt; ???</span></span>
<span class="line">myConst<span class="token punctuation">;</span> <span class="token comment">// =&gt; ???</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> myVar <span class="token operator">=</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> myConst <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>#答案：</p><blockquote><p>undefined ReferenceError</p></blockquote><p>#解析： 在var变量声明之前,myVar的结果都是undefined； 而let 和 const 声明之前，进行的变量的访问都会报错，因为let 和const都不存在变量的提升， 声明之前的区域成为TDZ，或称暂时性死区，或称时间死区</p>`,5),l=[c];function o(p,i){return a(),n("div",null,l)}const d=s(t,[["render",o],["__file","B002-变量的提升.html.vue"]]),m=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E5%8F%98%E9%87%8F%E7%B1%BB/B002-%E5%8F%98%E9%87%8F%E7%9A%84%E6%8F%90%E5%8D%87.html","title":"B002-变量的提升","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1724247277000,"contributors":[{"name":"前端架构师","email":"62106726+qdleader@users.noreply.github.com","commits":1}]},"filePathRelative":"前端面试/js类/变量类/B002-变量的提升.md"}');export{d as comp,m as data};
