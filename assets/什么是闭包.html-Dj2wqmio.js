import{_ as n,c as s,o as a,a as e}from"./app-90N25QkG.js";const p={},t=e(`<h1 id="如何理解闭包" tabindex="-1"><a class="header-anchor" href="#如何理解闭包"><span>如何理解闭包？</span></a></h1><p>·</p><h2 id="_1、定义和用法" tabindex="-1"><a class="header-anchor" href="#_1、定义和用法"><span>1、定义和用法：</span></a></h2><p>当一个函数的返回值是另外一个函数，而返回的那个函数如果调用了其父函数内部的其它变量，如果返回的这个函数在外部被执行，就产生了闭包。</p><h2 id="_2、表现形式" tabindex="-1"><a class="header-anchor" href="#_2、表现形式"><span>2、表现形式：</span></a></h2><p>使函数外部能够调用函数内部定义的变量。</p><h2 id="_3、实例如下" tabindex="-1"><a class="header-anchor" href="#_3、实例如下"><span>3、实例如下：</span></a></h2><p>(1)、根据作用域链的规则，底层作用域没有声明的变量，会向上一级找，找到就返回，没找到就一直找，直到window的变量，没有就返回undefined。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> count<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>   <span class="token comment">//全局作用域 标记为flag1</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment">//函数全局作用域 标记为flag2</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        count<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>   <span class="token comment">//函数的内部作用域</span></span>
<span class="line">        <span class="token function">alert</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出1</span></span>
<span class="line"><span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出2</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里明显count 是函数内部的flag2 的那个count 。</p><h2 id="_4、变量的作用域" tabindex="-1"><a class="header-anchor" href="#_4、变量的作用域"><span>4、变量的作用域</span></a></h2><p>要理解闭包，首先必须理解Javascript特殊的变量作用域。 变量的作用域分类：全局变量和局部变量。</p><p>特点： 1、函数内部可以读取函数外部的全局变量；在函数外部无法读取函数内的局部变量。 2、函数内部声明变量的时候，一定要使用var命令。如果不用的话，你实际上声明了一个全局变量！</p><h2 id="_5、使用闭包的注意点" tabindex="-1"><a class="header-anchor" href="#_5、使用闭包的注意点"><span>5、使用闭包的注意点</span></a></h2><p>1）滥用闭包，会造成内存泄漏：由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。解决方法是，在退出函数之前，将不使用的局部变量全部删除。</p><p>2）会改变父函数内部变量的值。所以，如果你把父函数当作对象（object）使用，把闭包当作它的公用方法（Public Method），把内部变量当作它的私有属性（private value），这时一定要小心，不要随便改变父函数内部变量的值。</p>`,16),l=[t];function c(i,o){return a(),s("div",null,l)}const r=n(p,[["render",c],["__file","什么是闭包.html.vue"]]),d=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E9%97%AD%E5%8C%85%E7%B1%BB/%E4%BB%80%E4%B9%88%E6%98%AF%E9%97%AD%E5%8C%85.html","title":"如何理解闭包？","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1、定义和用法：","slug":"_1、定义和用法","link":"#_1、定义和用法","children":[]},{"level":2,"title":"2、表现形式：","slug":"_2、表现形式","link":"#_2、表现形式","children":[]},{"level":2,"title":"3、实例如下：","slug":"_3、实例如下","link":"#_3、实例如下","children":[]},{"level":2,"title":"4、变量的作用域","slug":"_4、变量的作用域","link":"#_4、变量的作用域","children":[]},{"level":2,"title":"5、使用闭包的注意点","slug":"_5、使用闭包的注意点","link":"#_5、使用闭包的注意点","children":[]}],"git":{"updatedTime":1724247277000,"contributors":[{"name":"前端架构师","email":"62106726+qdleader@users.noreply.github.com","commits":1}]},"filePathRelative":"前端面试/js类/闭包类/什么是闭包.md"}');export{r as comp,d as data};
