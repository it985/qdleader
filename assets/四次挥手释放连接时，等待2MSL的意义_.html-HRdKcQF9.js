import{_ as e,c as _,o as l,b as t}from"./app-90N25QkG.js";const n={},s=t("h1",{id:"四次挥手释放连接时-等待2msl的意义",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#四次挥手释放连接时-等待2msl的意义"},[t("span",null,"四次挥手释放连接时，等待2MSL的意义?")])],-1),o=t("p",null,"MSL是Maximum Segment Lifetime的英文缩写，可译为“最长报文段寿命”，它是任何报文在网络上存在的最长时间，超过这个时间报文将被丢弃。",-1),a=t("ol",null,[t("li",null,[t("p",null,"为了保证客户端发送的最后一个ACK报文段能够到达服务器。因为这个ACK有可能丢失，从而导致处在LAST-ACK状态的服务器收不到对FIN-ACK的确认报文。服务器会超时重传这个FIN-ACK，接着客户端再重传一次确认，重新启动时间等待计时器。最后客户端和服务器都能正常的关闭。假设客户端不等待2MSL，而是在发送完ACK之后直接释放关闭，一但这个ACK丢失的话，服务器就无法正常的进入关闭连接状态。")]),t("li",null,[t("p",null,"防止“已失效的连接请求报文段”出现在本连接中。 客户端在发送完最后一个ACK报文段后，再经过2MSL，就可以使本连接持续的时间内所产生的所有报文段都从网络中消失，使下一个新的连接中不会出现这种旧的连接请求报文段。")])],-1),E=t("p",null,"延伸",-1),c=t("p",null,"这种2MSL等待的另一个结果是这个TCP连接在2MSL等待期间，定义这个连接的插口（客户的IP地址和端口号，服务器的IP地址和端口号）不能再被使用。这个连接只能在2MSL结束后才能再被使用。",-1),i=[s,o,a,E,c];function r(h,m){return l(),_("div",null,i)}const d=e(n,[["render",r],["__file","四次挥手释放连接时，等待2MSL的意义_.html.vue"]]),B=JSON.parse('{"path":"/http/http%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E7%B1%BB/%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E9%87%8A%E6%94%BE%E8%BF%9E%E6%8E%A5%E6%97%B6%EF%BC%8C%E7%AD%89%E5%BE%852MSL%E7%9A%84%E6%84%8F%E4%B9%89_.html","title":"四次挥手释放连接时，等待2MSL的意义?","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1724247277000,"contributors":[{"name":"前端架构师","email":"62106726+qdleader@users.noreply.github.com","commits":1}]},"filePathRelative":"http/http三次握手四次挥手类/四次挥手释放连接时，等待2MSL的意义?.md"}');export{d as comp,B as data};
