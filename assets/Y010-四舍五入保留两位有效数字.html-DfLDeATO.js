import{_ as n,c as s,o as a,a as p}from"./app-90N25QkG.js";const t={},e=p(`<h1 id="y010-四舍五入保留两位有效数字" tabindex="-1"><a class="header-anchor" href="#y010-四舍五入保留两位有效数字"><span>Y010-四舍五入保留两位有效数字</span></a></h1><p>js四舍五入并保留两位小数 Math.Round()函数，能够对一个浮点数进行四舍五入，但是返回的结果是个整数，无法精确到小数点后，比如0.123，Math.round()返回0。</p><p>Number.toFixed()方法，能保留小数点后面的指定位数，但如果执行 5.1.toFixed(2) 的话，会返回5.10，而不是我们期待的5.1，所以，这个方法也不太可取。</p><p>最简单实现的方法是，假设我要对0.409进行四舍五入并保留两位小数，如果直接调用Math.round()的话，结果是0，如果直接调用.toFixed(2)方法的话，会返回0.40，最简单有效的方法就是对0.409先乘以100，再调用Math.round()，然后再除以100，就OK了。 var number = 0.409; alert(Math.round(number * 100) / 100); //输出0.41 如上，如果是三位小数</p><p>Math.round(number * 1000) / 1000) 不确定是多少位小数，则写一个方法</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// num为传入的值，n为保留的小数位</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">fomatFloat</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span>n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>   </span>
<span class="line">    <span class="token keyword">var</span> f <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span>   </span>
<span class="line">    f <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>num<span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// n 幂   </span></span>
<span class="line">    <span class="token keyword">var</span> s <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">var</span> rs <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//判定如果是整数，增加小数点再补0</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>rs <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        rs <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span></span>
<span class="line">        s <span class="token operator">+=</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">;</span> </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">while</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> rs <span class="token operator">+</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        s <span class="token operator">+=</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> s<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上代码将数值和需要保留位数传入fomatFloar函数中，并判定如果不足长度时补0</p>`,7),o=[e];function c(l,i){return a(),s("div",null,o)}const r=n(t,[["render",c],["__file","Y010-四舍五入保留两位有效数字.html.vue"]]),k=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E8%BF%90%E7%AE%97%E7%B1%BB/Y010-%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5%E4%BF%9D%E7%95%99%E4%B8%A4%E4%BD%8D%E6%9C%89%E6%95%88%E6%95%B0%E5%AD%97.html","title":"Y010-四舍五入保留两位有效数字","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1724247277000,"contributors":[{"name":"前端架构师","email":"62106726+qdleader@users.noreply.github.com","commits":1}]},"filePathRelative":"前端面试/js类/运算类/Y010-四舍五入保留两位有效数字.md"}');export{r as comp,k as data};
