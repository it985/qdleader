import{_ as a,c as s,o as e,a as t}from"./app-90N25QkG.js";const n={},i=t(`<h1 id="移动端300ms延迟问题" tabindex="-1"><a class="header-anchor" href="#移动端300ms延迟问题"><span>移动端300ms延迟问题</span></a></h1><h2 id="方法1" tabindex="-1"><a class="header-anchor" href="#方法1"><span>方法1</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">&quot;viewport&quot;</span> content<span class="token operator">=</span><span class="token string">&quot;width=device-width&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>站点内包含了 width=device-width 这个 <meta> 标签，也就意味着这个网站是响应式的网站，那么移动端浏览器就可以自动禁止掉双击缩放行为并且去掉 300ms 的点击延迟。</p><p>这个方案相对方案1 的好处在于，它没有完全禁止缩放，只是禁用了默认的双击缩放行为，但用户仍然可以通过双指缩放来缩放页面。</p><h2 id="方法2-fastclick" tabindex="-1"><a class="header-anchor" href="#方法2-fastclick"><span>方法2 FastClick</span></a></h2><p>FastClick 在检测到 touched 事件的时候，会通过 DOM 自定义事件立即出发一个模拟 click 事件，并把浏览器在 300 毫秒之后真正触发的 click 事件阻止掉。</p>`,7),c=[i];function l(r,o){return e(),s("div",null,c)}const d=a(n,[["render",l],["__file","移动端300ms延迟问题.html.vue"]]),h=JSON.parse('{"path":"/%E7%A7%BB%E5%8A%A8%E7%AB%AF/%E7%A7%BB%E5%8A%A8%E7%AB%AF300ms%E5%BB%B6%E8%BF%9F%E9%97%AE%E9%A2%98.html","title":"移动端300ms延迟问题","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"方法1","slug":"方法1","link":"#方法1","children":[]},{"level":2,"title":"方法2 FastClick","slug":"方法2-fastclick","link":"#方法2-fastclick","children":[]}],"git":{"updatedTime":1724247277000,"contributors":[{"name":"前端架构师","email":"62106726+qdleader@users.noreply.github.com","commits":1}]},"filePathRelative":"移动端/移动端300ms延迟问题.md"}');export{d as comp,h as data};
