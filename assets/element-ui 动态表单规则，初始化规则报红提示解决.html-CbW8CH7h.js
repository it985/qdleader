import{_ as s,c as a,o as n,a as e}from"./app-90N25QkG.js";const p={},t=e(`<h1 id="element-ui-动态表单规则-初始化规则报红提示解决" tabindex="-1"><a class="header-anchor" href="#element-ui-动态表单规则-初始化规则报红提示解决"><span>element-ui 动态表单规则，初始化规则报红提示解决</span></a></h1><p>今天在做一个动态表单规则的需求, 但是赋值给rules规则值之后，初始化的时候或者更改rules，表单就会立即检验报红。</p><p>解决办法如下两种：（推荐使用第一种）</p><p>第一种：通过form组件属性配置解决（validate-on-rule-change=&quot;false&quot;）</p><p>该属性是 是否在 rules 属性改变后立即触发一次验证, 我们配置成false，就不会立即触发了</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>el<span class="token operator">-</span>form ref<span class="token operator">=</span><span class="token string">&quot;ruleFormRef&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;formDom&quot;</span> <span class="token operator">:</span>model<span class="token operator">=</span><span class="token string">&quot;ruleForm&quot;</span> <span class="token operator">:</span>rules<span class="token operator">=</span><span class="token string">&quot;rules&quot;</span> label<span class="token operator">-</span>width<span class="token operator">=</span><span class="token string">&quot;180px&quot;</span> <span class="token operator">:</span>validate<span class="token operator">-</span>on<span class="token operator">-</span>rule<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">&quot;false&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item label<span class="token operator">=</span><span class="token string">&quot;起止日期&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item prop<span class="token operator">=</span><span class="token string">&quot;date1&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span>el<span class="token operator">-</span>date<span class="token operator">-</span>picker v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;ruleForm.date1&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;date&quot;</span> placeholder<span class="token operator">=</span><span class="token string">&quot;选择日期&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;width: 100%;&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">-</span>item<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>form<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种：通过js解决</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token literal-property property">rules</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">date1</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;请选择开始日期&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">trigger</span><span class="token operator">:</span> <span class="token string">&quot;change&quot;</span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> ruleFormRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>FormInstance<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    ruleFormRef<span class="token punctuation">.</span>value<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">clearValidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[t];function l(r,c){return n(),a("div",null,o)}const u=s(p,[["render",l],["__file","element-ui 动态表单规则，初始化规则报红提示解决.html.vue"]]),k=JSON.parse('{"path":"/UI%E6%A1%86%E6%9E%B6/elementPlus/element-ui%20%E5%8A%A8%E6%80%81%E8%A1%A8%E5%8D%95%E8%A7%84%E5%88%99%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E8%A7%84%E5%88%99%E6%8A%A5%E7%BA%A2%E6%8F%90%E7%A4%BA%E8%A7%A3%E5%86%B3.html","title":"element-ui 动态表单规则，初始化规则报红提示解决","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1724247277000,"contributors":[{"name":"前端架构师","email":"62106726+qdleader@users.noreply.github.com","commits":1}]},"filePathRelative":"UI框架/elementPlus/element-ui 动态表单规则，初始化规则报红提示解决.md"}');export{u as comp,k as data};
