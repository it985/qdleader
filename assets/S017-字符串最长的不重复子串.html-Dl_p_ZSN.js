import{_ as s,c as n,o as a,a as p}from"./app-90N25QkG.js";const e={},t=p(`<h1 id="s017-字符串最长的不重复子串" tabindex="-1"><a class="header-anchor" href="#s017-字符串最长的不重复子串"><span>S017-字符串最长的不重复子串</span></a></h1><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">题目描述</span>
<span class="line">给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">示例 <span class="token number">1</span><span class="token operator">:</span></span>
<span class="line"></span>
<span class="line"><span class="token literal-property property">输入</span><span class="token operator">:</span> s <span class="token operator">=</span> <span class="token string">&quot;abcabcbb&quot;</span></span>
<span class="line"><span class="token literal-property property">输出</span><span class="token operator">:</span> <span class="token number">3</span></span>
<span class="line"><span class="token literal-property property">解释</span><span class="token operator">:</span> 因为无重复字符的最长子串是 <span class="token string">&quot;abc&quot;</span>，所以其长度为 <span class="token number">3</span>。</span>
<span class="line"></span>
<span class="line">示例 <span class="token number">2</span><span class="token operator">:</span></span>
<span class="line"></span>
<span class="line"><span class="token literal-property property">输入</span><span class="token operator">:</span> s <span class="token operator">=</span> <span class="token string">&quot;bbbbb&quot;</span></span>
<span class="line"><span class="token literal-property property">输出</span><span class="token operator">:</span> <span class="token number">1</span></span>
<span class="line"><span class="token literal-property property">解释</span><span class="token operator">:</span> 因为无重复字符的最长子串是 <span class="token string">&quot;b&quot;</span>，所以其长度为 <span class="token number">1</span>。</span>
<span class="line"></span>
<span class="line">示例 <span class="token number">3</span><span class="token operator">:</span></span>
<span class="line"></span>
<span class="line"><span class="token literal-property property">输入</span><span class="token operator">:</span> s <span class="token operator">=</span> <span class="token string">&quot;pwwkew&quot;</span></span>
<span class="line"><span class="token literal-property property">输出</span><span class="token operator">:</span> <span class="token number">3</span></span>
<span class="line"><span class="token literal-property property">解释</span><span class="token operator">:</span> 因为无重复字符的最长子串是 <span class="token string">&quot;wke&quot;</span>，所以其长度为 <span class="token number">3</span>。</span>
<span class="line">     请注意，你的答案必须是 子串 的长度，<span class="token string">&quot;pwke&quot;</span> 是一个子序列，不是子串。</span>
<span class="line"></span>
<span class="line">示例 <span class="token number">4</span><span class="token operator">:</span></span>
<span class="line"></span>
<span class="line"><span class="token literal-property property">输入</span><span class="token operator">:</span> s <span class="token operator">=</span> <span class="token string">&quot;&quot;</span></span>
<span class="line"><span class="token literal-property property">输出</span><span class="token operator">:</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">lengthOfLongestSubstring</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&lt;=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> lr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> index <span class="token operator">=</span> lr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      left <span class="token operator">=</span> index <span class="token operator">+</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      lr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> lr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    right<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> max<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),l=[t];function o(c,i){return a(),n("div",null,l)}const u=s(e,[["render",o],["__file","S017-字符串最长的不重复子串.html.vue"]]),k=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E6%89%8B%E5%86%99%E7%B1%BB/S017-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%9C%80%E9%95%BF%E7%9A%84%E4%B8%8D%E9%87%8D%E5%A4%8D%E5%AD%90%E4%B8%B2.html","title":"S017-字符串最长的不重复子串","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1724247277000,"contributors":[{"name":"前端架构师","email":"62106726+qdleader@users.noreply.github.com","commits":1}]},"filePathRelative":"前端面试/js类/手写类/S017-字符串最长的不重复子串.md"}');export{u as comp,k as data};
